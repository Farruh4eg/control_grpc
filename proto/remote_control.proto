syntax = "proto3";

package control_grpc;
option go_package = "control_grpc/proto";

service RemoteControlService {
  rpc GetFeed (stream FeedRequest) returns (stream FeedResponse);
  rpc Ping(PingRequest) returns (PingResponse);
}


message FeedRequest {
  bool success = 1;
  string message = 2;       // General message type, e.g., "init", "mouse_event", "keyboard_event"
  int32 clientWidth = 3;    // Client's viewport width
  int32 clientHeight = 4;   // Client's viewport height
  int64 timestamp = 9;      // Event timestamp

  // Mouse specific fields
  int32 mouseX = 5;
  int32 mouseY = 6;
  string mouseBtn = 7;        // e.g., "left", "right", "middle" (for current state or event button)
  string mouseEventType = 8;  // e.g., "down", "up", "move", "in", "out"

  // Keyboard specific fields
  string keyboard_event_type = 10; // "keydown", "keyup", "keychar"
  string key_name = 11;            // For keydown/keyup (e.g., "KeyA", "Enter", "ShiftL") from fyne.KeyEvent.Name
  string key_char_str = 12;        // For keychar (string representation of the rune typed)

  // Modifier key states
  bool modifier_shift = 13;
  bool modifier_ctrl = 14;
  bool modifier_alt = 15;
  bool modifier_super = 16;      // Super key (Windows key, Command key on macOS)
}


message FeedResponse {
  bytes data = 1;
  int32 frameNumber = 2;
  int64 timestamp = 3;
  string contentType = 4;
  string hwAccel = 5;
}

message PingRequest {
  int64 client_timestamp_nano = 1;
}

message PingResponse {
  int64 client_timestamp_nano = 1; // Echoed from request
}
