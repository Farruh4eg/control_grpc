// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/remote_control.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TerminalResponse_OutputType int32

const (
	TerminalResponse_STDOUT         TerminalResponse_OutputType = 0
	TerminalResponse_STDERR         TerminalResponse_OutputType = 1
	TerminalResponse_SYSTEM_MESSAGE TerminalResponse_OutputType = 2 // For messages from the terminal service itself (e.g., command ended)
	TerminalResponse_ERROR_MESSAGE  TerminalResponse_OutputType = 3 // For errors from the terminal service itself
)

// Enum value maps for TerminalResponse_OutputType.
var (
	TerminalResponse_OutputType_name = map[int32]string{
		0: "STDOUT",
		1: "STDERR",
		2: "SYSTEM_MESSAGE",
		3: "ERROR_MESSAGE",
	}
	TerminalResponse_OutputType_value = map[string]int32{
		"STDOUT":         0,
		"STDERR":         1,
		"SYSTEM_MESSAGE": 2,
		"ERROR_MESSAGE":  3,
	}
)

func (x TerminalResponse_OutputType) Enum() *TerminalResponse_OutputType {
	p := new(TerminalResponse_OutputType)
	*p = x
	return p
}

func (x TerminalResponse_OutputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TerminalResponse_OutputType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_remote_control_proto_enumTypes[0].Descriptor()
}

func (TerminalResponse_OutputType) Type() protoreflect.EnumType {
	return &file_proto_remote_control_proto_enumTypes[0]
}

func (x TerminalResponse_OutputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TerminalResponse_OutputType.Descriptor instead.
func (TerminalResponse_OutputType) EnumDescriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{5, 0}
}

type FeedRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Success      bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`            // General message type, e.g., "init", "mouse_event", "keyboard_event"
	ClientWidth  int32                  `protobuf:"varint,3,opt,name=clientWidth,proto3" json:"clientWidth,omitempty"`   // Client's viewport width
	ClientHeight int32                  `protobuf:"varint,4,opt,name=clientHeight,proto3" json:"clientHeight,omitempty"` // Client's viewport height
	Timestamp    int64                  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`       // Event timestamp
	// Mouse specific fields
	MouseX         int32  `protobuf:"varint,5,opt,name=mouseX,proto3" json:"mouseX,omitempty"`
	MouseY         int32  `protobuf:"varint,6,opt,name=mouseY,proto3" json:"mouseY,omitempty"`
	MouseBtn       string `protobuf:"bytes,7,opt,name=mouseBtn,proto3" json:"mouseBtn,omitempty"`             // e.g., "left", "right", "middle" (for current state or event button)
	MouseEventType string `protobuf:"bytes,8,opt,name=mouseEventType,proto3" json:"mouseEventType,omitempty"` // e.g., "down", "up", "move", "in", "out"
	// Keyboard specific fields
	KeyboardEventType string `protobuf:"bytes,10,opt,name=keyboard_event_type,json=keyboardEventType,proto3" json:"keyboard_event_type,omitempty"` // "keydown", "keyup", "keychar"
	KeyName           string `protobuf:"bytes,11,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`                                 // For keydown/keyup (e.g., "KeyA", "Enter", "ShiftL") from fyne.KeyEvent.Name
	KeyCharStr        string `protobuf:"bytes,12,opt,name=key_char_str,json=keyCharStr,proto3" json:"key_char_str,omitempty"`                      // For keychar (string representation of the rune typed)
	// Modifier key states
	ModifierShift bool `protobuf:"varint,13,opt,name=modifier_shift,json=modifierShift,proto3" json:"modifier_shift,omitempty"`
	ModifierCtrl  bool `protobuf:"varint,14,opt,name=modifier_ctrl,json=modifierCtrl,proto3" json:"modifier_ctrl,omitempty"`
	ModifierAlt   bool `protobuf:"varint,15,opt,name=modifier_alt,json=modifierAlt,proto3" json:"modifier_alt,omitempty"`
	ModifierSuper bool `protobuf:"varint,16,opt,name=modifier_super,json=modifierSuper,proto3" json:"modifier_super,omitempty"` // Super key (Windows key, Command key on macOS)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	mi := &file_proto_remote_control_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_remote_control_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{0}
}

func (x *FeedRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FeedRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FeedRequest) GetClientWidth() int32 {
	if x != nil {
		return x.ClientWidth
	}
	return 0
}

func (x *FeedRequest) GetClientHeight() int32 {
	if x != nil {
		return x.ClientHeight
	}
	return 0
}

func (x *FeedRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FeedRequest) GetMouseX() int32 {
	if x != nil {
		return x.MouseX
	}
	return 0
}

func (x *FeedRequest) GetMouseY() int32 {
	if x != nil {
		return x.MouseY
	}
	return 0
}

func (x *FeedRequest) GetMouseBtn() string {
	if x != nil {
		return x.MouseBtn
	}
	return ""
}

func (x *FeedRequest) GetMouseEventType() string {
	if x != nil {
		return x.MouseEventType
	}
	return ""
}

func (x *FeedRequest) GetKeyboardEventType() string {
	if x != nil {
		return x.KeyboardEventType
	}
	return ""
}

func (x *FeedRequest) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *FeedRequest) GetKeyCharStr() string {
	if x != nil {
		return x.KeyCharStr
	}
	return ""
}

func (x *FeedRequest) GetModifierShift() bool {
	if x != nil {
		return x.ModifierShift
	}
	return false
}

func (x *FeedRequest) GetModifierCtrl() bool {
	if x != nil {
		return x.ModifierCtrl
	}
	return false
}

func (x *FeedRequest) GetModifierAlt() bool {
	if x != nil {
		return x.ModifierAlt
	}
	return false
}

func (x *FeedRequest) GetModifierSuper() bool {
	if x != nil {
		return x.ModifierSuper
	}
	return false
}

type FeedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	FrameNumber   int32                  `protobuf:"varint,2,opt,name=frameNumber,proto3" json:"frameNumber,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=contentType,proto3" json:"contentType,omitempty"`
	HwAccel       string                 `protobuf:"bytes,5,opt,name=hwAccel,proto3" json:"hwAccel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedResponse) Reset() {
	*x = FeedResponse{}
	mi := &file_proto_remote_control_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedResponse) ProtoMessage() {}

func (x *FeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_remote_control_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedResponse.ProtoReflect.Descriptor instead.
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{1}
}

func (x *FeedResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FeedResponse) GetFrameNumber() int32 {
	if x != nil {
		return x.FrameNumber
	}
	return 0
}

func (x *FeedResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FeedResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FeedResponse) GetHwAccel() string {
	if x != nil {
		return x.HwAccel
	}
	return ""
}

type PingRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ClientTimestampNano int64                  `protobuf:"varint,1,opt,name=client_timestamp_nano,json=clientTimestampNano,proto3" json:"client_timestamp_nano,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_proto_remote_control_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_remote_control_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{2}
}

func (x *PingRequest) GetClientTimestampNano() int64 {
	if x != nil {
		return x.ClientTimestampNano
	}
	return 0
}

type PingResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ClientTimestampNano int64                  `protobuf:"varint,1,opt,name=client_timestamp_nano,json=clientTimestampNano,proto3" json:"client_timestamp_nano,omitempty"` // Echoed from request
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_proto_remote_control_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_remote_control_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{3}
}

func (x *PingResponse) GetClientTimestampNano() int64 {
	if x != nil {
		return x.ClientTimestampNano
	}
	return 0
}

// Terminal Messages
type TerminalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // For future use, e.g., to identify terminal sessions
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`                      // The command string to execute
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalRequest) Reset() {
	*x = TerminalRequest{}
	mi := &file_proto_remote_control_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalRequest) ProtoMessage() {}

func (x *TerminalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_remote_control_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalRequest.ProtoReflect.Descriptor instead.
func (*TerminalRequest) Descriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{4}
}

func (x *TerminalRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TerminalRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type TerminalResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	SessionId     string                      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	OutputType    TerminalResponse_OutputType `protobuf:"varint,2,opt,name=output_type,json=outputType,proto3,enum=control_grpc.TerminalResponse_OutputType" json:"output_type,omitempty"`
	OutputLine    string                      `protobuf:"bytes,3,opt,name=output_line,json=outputLine,proto3" json:"output_line,omitempty"`        // A line of output or a message
	CommandEnded  bool                        `protobuf:"varint,4,opt,name=command_ended,json=commandEnded,proto3" json:"command_ended,omitempty"` // True if this message signifies the end of the current command's output
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalResponse) Reset() {
	*x = TerminalResponse{}
	mi := &file_proto_remote_control_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalResponse) ProtoMessage() {}

func (x *TerminalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_remote_control_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalResponse.ProtoReflect.Descriptor instead.
func (*TerminalResponse) Descriptor() ([]byte, []int) {
	return file_proto_remote_control_proto_rawDescGZIP(), []int{5}
}

func (x *TerminalResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TerminalResponse) GetOutputType() TerminalResponse_OutputType {
	if x != nil {
		return x.OutputType
	}
	return TerminalResponse_STDOUT
}

func (x *TerminalResponse) GetOutputLine() string {
	if x != nil {
		return x.OutputLine
	}
	return ""
}

func (x *TerminalResponse) GetCommandEnded() bool {
	if x != nil {
		return x.CommandEnded
	}
	return false
}

var File_proto_remote_control_proto protoreflect.FileDescriptor

var file_proto_remote_control_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x9c, 0x04, 0x0a, 0x0b, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x58, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x58, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x75, 0x73, 0x65, 0x59, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x75, 0x73,
	0x65, 0x59, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x74, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x74, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x73, 0x74,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x43, 0x68, 0x61, 0x72,
	0x53, 0x74, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x43, 0x74, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x41,
	0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x22, 0x9e, 0x01, 0x0a, 0x0c, 0x46, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x77, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x77, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x22, 0x41, 0x0a, 0x0b, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x22, 0x42, 0x0a,
	0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e,
	0x6f, 0x22, 0x4a, 0x0a, 0x0f, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x90, 0x02,
	0x0a, 0x10, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x4a, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e,
	0x64, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x44, 0x4f, 0x55, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x44, 0x45, 0x52, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x03,
	0x32, 0x9b, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x3d, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x65,
	0x0a, 0x0f, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x14, 0x5a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_proto_remote_control_proto_rawDescOnce sync.Once
	file_proto_remote_control_proto_rawDescData []byte
)

func file_proto_remote_control_proto_rawDescGZIP() []byte {
	file_proto_remote_control_proto_rawDescOnce.Do(func() {
		file_proto_remote_control_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_remote_control_proto_rawDesc), len(file_proto_remote_control_proto_rawDesc)))
	})
	return file_proto_remote_control_proto_rawDescData
}

var file_proto_remote_control_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_remote_control_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_remote_control_proto_goTypes = []any{
	(TerminalResponse_OutputType)(0), // 0: control_grpc.TerminalResponse.OutputType
	(*FeedRequest)(nil),              // 1: control_grpc.FeedRequest
	(*FeedResponse)(nil),             // 2: control_grpc.FeedResponse
	(*PingRequest)(nil),              // 3: control_grpc.PingRequest
	(*PingResponse)(nil),             // 4: control_grpc.PingResponse
	(*TerminalRequest)(nil),          // 5: control_grpc.TerminalRequest
	(*TerminalResponse)(nil),         // 6: control_grpc.TerminalResponse
}
var file_proto_remote_control_proto_depIdxs = []int32{
	0, // 0: control_grpc.TerminalResponse.output_type:type_name -> control_grpc.TerminalResponse.OutputType
	1, // 1: control_grpc.RemoteControlService.GetFeed:input_type -> control_grpc.FeedRequest
	3, // 2: control_grpc.RemoteControlService.Ping:input_type -> control_grpc.PingRequest
	5, // 3: control_grpc.TerminalService.CommandStream:input_type -> control_grpc.TerminalRequest
	2, // 4: control_grpc.RemoteControlService.GetFeed:output_type -> control_grpc.FeedResponse
	4, // 5: control_grpc.RemoteControlService.Ping:output_type -> control_grpc.PingResponse
	6, // 6: control_grpc.TerminalService.CommandStream:output_type -> control_grpc.TerminalResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_remote_control_proto_init() }
func file_proto_remote_control_proto_init() {
	if File_proto_remote_control_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_remote_control_proto_rawDesc), len(file_proto_remote_control_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_remote_control_proto_goTypes,
		DependencyIndexes: file_proto_remote_control_proto_depIdxs,
		EnumInfos:         file_proto_remote_control_proto_enumTypes,
		MessageInfos:      file_proto_remote_control_proto_msgTypes,
	}.Build()
	File_proto_remote_control_proto = out.File
	file_proto_remote_control_proto_goTypes = nil
	file_proto_remote_control_proto_depIdxs = nil
}
